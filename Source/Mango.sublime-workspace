{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"GET",
				"getCoords"
			],
			[
				"in",
				"include"
			],
			[
				"e",
				"endl"
			],
			[
				"cou",
				"cout"
			],
			[
				"num",
				"number"
			],
			[
				"cl",
				"close"
			],
			[
				"FO",
				"for"
			],
			[
				"z",
				"z"
			],
			[
				"Sq",
				"SquareArrow_Vertices"
			],
			[
				"st",
				"std"
			],
			[
				"c",
				"const"
			],
			[
				"x",
				"xsize"
			],
			[
				"s",
				"size"
			],
			[
				"g",
				"grid"
			],
			[
				"gr",
				"grid10"
			],
			[
				"N",
				"NewSize"
			],
			[
				"O",
				"OldSize"
			],
			[
				"re",
				"return"
			],
			[
				"h",
				"hsqr"
			],
			[
				"M",
				"MonteStep"
			],
			[
				"y",
				"ysize"
			],
			[
				"nx",
				"nx"
			],
			[
				"ny",
				"ny"
			],
			[
				"co",
				"cox1"
			],
			[
				"a_t",
				"a_t"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "public class ArcBallCamera\n{\n\n    public ArcBallCamera(float aspectRation, Vector3 lookAt)\n    : this(aspectRation, MathHelper.PiOver4, lookAt, Vector3.Up, 0.1f, float.MaxValue) { }\n\n    public ArcBallCamera(float aspectRatio, float fieldOfView, Vector3 lookAt, Vector3 up, float nearPlane, float farPlane)\n    {\n        this.aspectRatio = aspectRatio;\n        this.fieldOfView = fieldOfView;            \n        this.lookAt = lookAt;\n        this.nearPlane = nearPlane;\n        this.farPlane = farPlane;\n    }\n\n        /// <summary>\n        /// Recreates our view matrix, then signals that the view matrix\n        /// is clean.\n        /// </summary>\n    private void ReCreateViewMatrix()\n    {\n            //Calculate the relative position of the camera                        \n        position = Vector3.Transform(Vector3.Backward, Matrix.CreateFromYawPitchRoll(yaw, pitch, 0));\n            //Convert the relative position to the absolute position\n        position *= zoom;\n        position += lookAt;\n\n            //Calculate a new viewmatrix\n        viewMatrix = Matrix.CreateLookAt(position, lookAt, Vector3.Up);\n        viewMatrixDirty = false;\n    }\n\n        /// <summary>\n        /// Recreates our projection matrix, then signals that the projection\n        /// matrix is clean.\n        /// </summary>\n    private void ReCreateProjectionMatrix()\n    {\n        projectionMatrix = Matrix.CreatePerspectiveFieldOfView(MathHelper.PiOver4, AspectRatio, nearPlane , farPlane);\n        projectionMatrixDirty = false;\n    }\n\n        #region HelperMethods\n\n        /// <summary>\n        /// Moves the camera and lookAt at to the right,\n        /// as seen from the camera, while keeping the same height\n        /// </summary>        \n    public void MoveCameraRight(float amount)\n    {\n            Vector3 right = Vector3.Normalize(LookAt - Position); //calculate forward\n            right = Vector3.Cross(right, Vector3.Up); //calculate the real right\n            right.Y = 0;\n            right.Normalize();\n            LookAt += right * amount;\n        }\n\n        /// <summary>\n        /// Moves the camera and lookAt forward,\n        /// as seen from the camera, while keeping the same height\n        /// </summary>        \n        public void MoveCameraForward(float amount)\n        {\n            Vector3 forward = Vector3.Normalize(LookAt - Position);\n            forward.Y = 0;\n            forward.Normalize();\n            LookAt += forward * amount;\n        }\n        \n        #endregion\n\n        #region FieldsAndProperties\n        //We don't need an update method because the camera only needs updating\n        //when we change one of it's parameters.\n        //We keep track if one of our matrices is dirty\n        //and reacalculate that matrix when it is accesed.\n        private bool viewMatrixDirty = true;\n        private bool projectionMatrixDirty = true;\n\n        public float MinPitch = -MathHelper.PiOver2 + 0.3f;\n        public float MaxPitch = MathHelper.PiOver2 - 0.3f;\n        private float pitch;\n        public float Pitch\n        {\n            get { return pitch; }\n            set\n            {\n                viewMatrixDirty = true;\n                pitch = MathHelper.Clamp(value, MinPitch, MaxPitch);               \n            }\n        }\n\n        private float yaw;\n        public float Yaw\n        {\n            get { return yaw; }\n            set\n            {\n                viewMatrixDirty = true;\n                yaw = value;\n            }\n        }\n\n        private float fieldOfView;\n        public float FieldOfView\n        {\n            get { return fieldOfView; }\n            set\n            {\n                projectionMatrixDirty = true;\n                fieldOfView = value;\n            }\n        }\n\n        private float aspectRatio;\n        public float AspectRatio\n        {\n            get { return aspectRatio; }\n            set\n            {\n                projectionMatrixDirty = true;\n                aspectRatio = value;\n            }\n        }\n\n        private float nearPlane;\n        public float NearPlane\n        {\n            get { return nearPlane; }\n            set\n            {\n                projectionMatrixDirty = true;\n                nearPlane = value;\n            }\n        }\n\n        private float farPlane;\n        public float FarPlane\n        {\n            get { return farPlane; }\n            set\n            {\n                projectionMatrixDirty = true;\n                farPlane = value;\n            }\n        }\n\n        public float MinZoom = 1;\n        public float MaxZoom = float.MaxValue;\n        private float zoom = 1;\n        public float Zoom\n        {\n            get { return zoom; }\n            set\n            {\n                viewMatrixDirty = true;\n                zoom = MathHelper.Clamp(value, MinZoom, MaxZoom);\n            }\n        }\n        \n        \n        private Vector3 position;\n        public Vector3 Position\n        {\n            get\n            {\n                if (viewMatrixDirty)\n                {\n                    ReCreateViewMatrix();\n                }\n                return position;\n            }\n        }\n\n        private Vector3 lookAt;\n        public Vector3 LookAt\n        {\n            get { return lookAt; }\n            set\n            {\n                viewMatrixDirty = true;\n                lookAt = value;\n            }\n        }\n        #endregion\n\n        #region ICamera Members        \n        public Matrix ViewProjectionMatrix\n        {\n            get {return ViewMatrix * ProjectionMatrix; }\n        }\n\n        private Matrix viewMatrix;        \n        public Matrix ViewMatrix\n        {\n            get\n            {\n                if (viewMatrixDirty)\n                {\n                    ReCreateViewMatrix();\n                }\n                return viewMatrix;\n            }\n        }\n\n        private Matrix projectionMatrix;\n        public Matrix ProjectionMatrix\n        {\n            get\n            {\n                if (projectionMatrixDirty)\n                {\n                    ReCreateProjectionMatrix();\n                }\n                return projectionMatrix;\n            }\n        }\n        #endregion\n    }",
			"settings":
			{
				"buffer_size": 6173,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Main.cpp",
			"settings":
			{
				"buffer_size": 890,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Window.h",
			"settings":
			{
				"buffer_size": 249,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Window.cpp",
			"settings":
			{
				"buffer_size": 1385,
				"line_ending": "Windows"
			}
		},
		{
			"file": "DrawGroup.h",
			"settings":
			{
				"buffer_size": 1200,
				"line_ending": "Windows"
			}
		},
		{
			"file": "DrawGroup.cpp",
			"settings":
			{
				"buffer_size": 14457,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Controls.h",
			"settings":
			{
				"buffer_size": 546,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Controls.cpp",
			"settings":
			{
				"buffer_size": 7668,
				"line_ending": "Windows"
			}
		},
		{
			"file": "DataInput.h",
			"settings":
			{
				"buffer_size": 840,
				"line_ending": "Windows"
			}
		},
		{
			"file": "DataInput.cpp",
			"settings":
			{
				"buffer_size": 10585,
				"line_ending": "Windows"
			}
		},
		{
			"file": "System.h",
			"settings":
			{
				"buffer_size": 495,
				"line_ending": "Windows"
			}
		},
		{
			"file": "System.cpp",
			"settings":
			{
				"buffer_size": 2952,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "#include \"Arguments.h\"\n\n#include <iostream>\n\nArguments::Arguments(int argc, char* argv[])\n{\n	for (int i = 1; i < argc; ++i)\n	{\n		if (std::string(argv[i]) == \"-f\")  \n			infolder = std::string(argv[i+1]);\n		if (std::string(argv[i]) == \"-start\")\n			startspin = atoi(argv[i + 1]);\n		if (std::string(argv[i]) == \"-num\")\n			numsteps = atoi(argv[i + 1]);\n		if (std::string(argv[i]) == \"-obj\")\n			objectfile = std::string(argv[i + 1]);\n		if (std::string(argv[i]) == \"-test\")\n			objectfile = \"./res/OBJ_files/susan.waveobj\";\n	}\n}\n\nArguments::~Arguments()\n{\n}\n",
			"file": "Arguments.cpp",
			"file_size": 646,
			"file_write_time": 1458220938000000,
			"settings":
			{
				"buffer_size": 550,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 96.0,
		"selected_items":
		[
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"packa",
				"Preferences: Browse Packages"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 139.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/rory/Mango_mac/Mango/TestData/5nmNDFeB/atoms-00000001.cfg",
		"/home/rory/Mango_mac/Mango/TestData/5nmNDFeB/atoms-00000002.cfg",
		"/home/rory/MANGO/Source/Shader.h",
		"/home/rory/MANGO/Source/DefualtObjects.h",
		"/home/rory/MANGO/SimpleArrow.txt",
		"/home/rory/MANGO/Source/Arguments.cpp",
		"/home/rory/MANGO/Source/Shader.cpp",
		"/home/rory/MANGO/Source/Arguments.h",
		"/home/rory/MANGO/Source/Struct.h",
		"/home/rory/MANGO/Source/Toggle.h",
		"/home/rory/.config/sublime-text-2/Packages/User/Default (Linux).sublime-keymap",
		"/home/rory/MANGO/res/OBJ_files/arrow.waveobj",
		"/home/rory/Mango/Source/Main.cpp",
		"/home/rory/Mango/Source/Mango.sublime-project",
		"/home/rory/HPCasignment/q7serial.cpp",
		"/home/rory/HPCasignment/output.txt",
		"/home/rory/HPCasignment/run.sh",
		"/home/rory/HPCasignment/exam_q3.f90",
		"/home/rory/HPCasignment/assinment3.cpp",
		"/home/rory/HPCasignment/assinment2.cpp",
		"/home/rory/HPCasignment/q7.cpp",
		"/home/rory/HPCasignment/OMP_Version.cpp",
		"/home/rory/HPCasignment/grid100",
		"/home/rory/HPCasignment/grid10",
		"/home/rory/HPCasignment/imageGrid.pgm",
		"/home/rory/HPCasignment/grid.txt",
		"/home/rory/HPCasignment/image.pgm",
		"/home/rory/Mango/Source/Arguments.cpp",
		"/home/rory/Mango/Source/Arguments.h",
		"/home/rory/Mango/Source/Window.cpp",
		"/home/rory/Mango/Source/Window.h",
		"/home/rory/Mango/Source/Text.cpp",
		"/home/rory/Mango/Source/Text.h",
		"/home/rory/Mango/Source/System.cpp",
		"/home/rory/Mango/Source/System.h",
		"/home/rory/Mango/Source/Struct.h",
		"/home/rory/Mango/Source/Shader.cpp",
		"/home/rory/Mango/Source/Shader.h",
		"/home/rory/Mango/Source/Output.cpp",
		"/home/rory/Mango/Source/Output.h",
		"/home/rory/Mango/Source/DrawGroup.cpp",
		"/home/rory/Mango/Source/DrawGroup.h",
		"/home/rory/Mango/Source/DataInput.cpp",
		"/home/rory/Mango/Source/DataInput.h",
		"/home/rory/Mango/Source/Controls.cpp",
		"/home/rory/Mango/Source/Controls.h",
		"/home/rory/Mango/makefile",
		"/home/rory/.config/sublime-text-2/Packages/User/MinimalFortran.sublime-settings",
		"/media/rory/2AACD9CAACD99125/Documents/Uni/Cygwin/Year2DuffingOscillator/back.sh",
		"/media/rory/ECD0EBC8D0EB96DC/cygwin64/home/Rory/HPCq7/q7.cpp",
		"/media/rory/RP767@YORK/PrintGridtoPGM.cpp",
		"/home/rory/.config/sublime-text-2/Packages/Default/Default (Windows).sublime-mousemap",
		"/home/rory/.config/sublime-text-2/Packages/Default/Default (Linux).sublime-keymap",
		"/home/rory/.config/sublime-text-2/Packages/Default/Default (Linux).sublime-mousemap"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"updat",
			"oor",
			"0.005",
			"ypos",
			"position",
			"backCross",
			"loadSpins",
			"SpinstepAdd",
			"SquareArrow",
			"[",
			"SPACE",
			"bool Toggle",
			"_3",
			"_2",
			"2",
			"1",
			"sys.visble(0)",
			"2",
			"1",
			"SDL_SCANCODE_SPACE",
			"SDL_SCANCODE_LEFT",
			"SDL_SCANCODE_SPACE",
			"Pressed",
			"stringstream",
			"double",
			".",
			".x",
			"Vertices",
			"myfile",
			"3",
			"/(size*size)",
			"112 112",
			"112 112 ",
			"112 112 112 112 112 112 112 ",
			".",
			"-",
			"y",
			"x",
			"indexVBO",
			"lSDL2",
			"glm::vec3",
			";",
			"_t",
			"F",
			"  ",
			"test1",
			"static,chunk_size"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"",
			"Y",
			"X",
			"_srl",
			"    ",
			"dynamic"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 9,
			"sheets":
			[
				{
					"buffer": 0,
					"settings":
					{
						"buffer_size": 6173,
						"regions":
						{
						},
						"selection":
						[
							[
								533,
								533
							]
						],
						"settings":
						{
							"glsv_configured": true,
							"glsv_enabled": 1,
							"glsv_spec": 0,
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "Main.cpp",
					"settings":
					{
						"buffer_size": 890,
						"regions":
						{
						},
						"selection":
						[
							[
								556,
								556
							]
						],
						"settings":
						{
							"glsv_configured": true,
							"glsv_enabled": 1,
							"glsv_spec": 0,
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 45.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "Window.h",
					"settings":
					{
						"buffer_size": 249,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"glsv_configured": true,
							"glsv_enabled": 1,
							"glsv_spec": 0,
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "Window.cpp",
					"settings":
					{
						"buffer_size": 1385,
						"regions":
						{
						},
						"selection":
						[
							[
								1133,
								1133
							]
						],
						"settings":
						{
							"glsv_configured": true,
							"glsv_enabled": 1,
							"glsv_spec": 0,
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "DrawGroup.h",
					"settings":
					{
						"buffer_size": 1200,
						"regions":
						{
						},
						"selection":
						[
							[
								359,
								359
							]
						],
						"settings":
						{
							"glsv_configured": true,
							"glsv_enabled": 1,
							"glsv_spec": 0,
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 315.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "DrawGroup.cpp",
					"settings":
					{
						"buffer_size": 14457,
						"regions":
						{
						},
						"selection":
						[
							[
								11539,
								11539
							]
						],
						"settings":
						{
							"glsv_configured": true,
							"glsv_enabled": 1,
							"glsv_spec": 0,
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5471.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "Controls.h",
					"settings":
					{
						"buffer_size": 546,
						"regions":
						{
						},
						"selection":
						[
							[
								231,
								231
							]
						],
						"settings":
						{
							"glsv_configured": true,
							"glsv_enabled": 1,
							"glsv_spec": 0,
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "Controls.cpp",
					"settings":
					{
						"buffer_size": 7668,
						"regions":
						{
						},
						"selection":
						[
							[
								2416,
								2416
							]
						],
						"settings":
						{
							"glsv_configured": true,
							"glsv_enabled": 1,
							"glsv_spec": 0,
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 931.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "DataInput.h",
					"settings":
					{
						"buffer_size": 840,
						"regions":
						{
						},
						"selection":
						[
							[
								346,
								346
							]
						],
						"settings":
						{
							"glsv_configured": true,
							"glsv_enabled": 1,
							"glsv_spec": 0,
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "DataInput.cpp",
					"settings":
					{
						"buffer_size": 10585,
						"regions":
						{
						},
						"selection":
						[
							[
								10240,
								10240
							]
						],
						"settings":
						{
							"glsv_configured": true,
							"glsv_enabled": 1,
							"glsv_spec": 0,
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5401.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "System.h",
					"settings":
					{
						"buffer_size": 495,
						"regions":
						{
						},
						"selection":
						[
							[
								409,
								409
							]
						],
						"settings":
						{
							"glsv_configured": true,
							"glsv_enabled": 1,
							"glsv_spec": 0,
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "System.cpp",
					"settings":
					{
						"buffer_size": 2952,
						"regions":
						{
						},
						"selection":
						[
							[
								203,
								203
							]
						],
						"settings":
						{
							"glsv_configured": true,
							"glsv_enabled": 1,
							"glsv_spec": 0,
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "Arguments.cpp",
					"settings":
					{
						"buffer_size": 550,
						"regions":
						{
						},
						"selection":
						[
							[
								550,
								550
							]
						],
						"settings":
						{
							"glsv_configured": true,
							"glsv_enabled": 1,
							"glsv_spec": 0,
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 100.0
	},
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 293.0,
	"status_bar_visible": true
}
